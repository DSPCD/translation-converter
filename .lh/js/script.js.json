{
    "sourceFile": "js/script.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1723779543442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1724161739271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const VERSION = \"0.10.30.23272\";\r\n+const VERSION = \"0.10.30.23341\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n \r\n const CROWDIN_URL = \"https://crowdin.com/backend/download/project/dyson-sphere-program/\";\r\n"
                },
                {
                    "date": 1724161803630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n const VERSION = \"0.10.30.23341\";\r\n \r\n+const LASTUPDATE = \"20/08/2024\";\r\n+\r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n \r\n const CROWDIN_URL = \"https://crowdin.com/backend/download/project/dyson-sphere-program/\";\r\n \r\n"
                },
                {
                    "date": 1724161888835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n \r\n const LASTUPDATE = \"20/08/2024\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n+document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n const CROWDIN_URL = \"https://crowdin.com/backend/download/project/dyson-sphere-program/\";\r\n \r\n const bgImages = [\r\n"
                },
                {
                    "date": 1725566916694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-const VERSION = \"0.10.30.23341\";\r\n+const VERSION = \"0.10.30.23430\";\r\n \r\n-const LASTUPDATE = \"20/08/2024\";\r\n+const LASTUPDATE = \"09/05/2024\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n"
                },
                {
                    "date": 1732998286003,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-const VERSION = \"0.10.30.23430\";\r\n+const VERSION = \"0.10.31.24632\";\r\n \r\n-const LASTUPDATE = \"09/05/2024\";\r\n+const LASTUPDATE = \"Updated 30 November 2024\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n"
                },
                {
                    "date": 1733146663169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-const VERSION = \"0.10.31.24632\";\r\n+const VERSION = \"0.10.31.24667\";\r\n \r\n-const LASTUPDATE = \"Updated 30 November 2024\";\r\n+const LASTUPDATE = \"Updated 2 December 2024\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n"
                },
                {
                    "date": 1733443956765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-const VERSION = \"0.10.31.24667\";\r\n+const VERSION = \"0.10.31.24697\";\r\n \r\n-const LASTUPDATE = \"Updated 2 December 2024\";\r\n+const LASTUPDATE = \"Updated 5 December 2024\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n"
                },
                {
                    "date": 1737685966638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-const VERSION = \"0.10.31.24697\";\r\n+const VERSION = \"0.10.32.25496\";\r\n \r\n-const LASTUPDATE = \"Updated 5 December 2024\";\r\n+const LASTUPDATE = \"Updated 23 January 2025\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n"
                },
                {
                    "date": 1737748168307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n-const VERSION = \"0.10.32.25496\";\r\n+const VERSION = \"0.10.32.25552\";\r\n \r\n-const LASTUPDATE = \"Updated 23 January 2025\";\r\n+const LASTUPDATE = \"Updated 24 January 2025\";\r\n \r\n document.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n document.getElementById('last-update').innerHTML = `${LASTUPDATE}`;\r\n \r\n"
                }
            ],
            "date": 1723779543442,
            "name": "Commit-0",
            "content": "const VERSION = \"0.10.30.23272\";\r\n\r\ndocument.getElementById('game-version').innerHTML = `v. ${VERSION}`;\r\n\r\nconst CROWDIN_URL = \"https://crowdin.com/backend/download/project/dyson-sphere-program/\";\r\n\r\nconst bgImages = [\r\n  {img: \"dspbg_0\", credit: null},\r\n  {img: \"dspbg_1\", credit: null},\r\n  {img: \"dspbg_2\", credit: \"u/sword112345\"},\r\n  {img: \"dspbg_3\", credit: \"u/dbmsX\"},\r\n  {img: \"dspbg_4\", credit: \"u/nthexwn\"},\r\n  {img: \"dspbg_5\", credit: \"u/Sudden_Explorer_7280\"},\r\n  {img: \"dspbg_6\", credit: \"u/dmigowski\"},\r\n  {img: \"dspbg_7\", credit: \"u/fergusonia_ssi\"},\r\n  {img: \"dspbg_8\", credit: \"u/FreyaAstral\"},\r\n  {img: \"dspbg_9\", credit: \"u/Efficient-Frame-7334\"},\r\n  {img: \"dspbg_10\", credit: \"u/KrAsTaLaR\"},\r\n];\r\n\r\nconst body = document.body;\r\n\r\nfunction getRandomImage() {\r\n  const randomIndex = Math.floor(Math.random() * bgImages.length);\r\n  return bgImages[randomIndex];\r\n}\r\n\r\nfunction checkWebpSupport() {\r\n  const canvas = document.createElement('canvas');\r\n  return canvas.toDataURL('image/webp').indexOf('data:image/webp') === 0;\r\n}\r\n\r\nfunction changeBackgroundImage() {\r\n  let basePath = window.location.origin + window.location.pathname;\r\n  const selectedImage = getRandomImage();\r\n  const extension = checkWebpSupport() ? 'webp' : 'jpg';\r\n  const imageUrl = `${selectedImage.img}.${extension}`;\r\n  body.style.backgroundImage = `url('${basePath}assets/bg/${imageUrl}')`;\r\n  let bgCreditBlock = document.getElementById('bg-credit-block');\r\n  let bgCredit = document.getElementById('bgcredit');\r\n  if(selectedImage.credit){\r\n    bgCreditBlock.classList.remove('hidden');\r\n    bgCredit.textContent = selectedImage.credit;\r\n  } else{\r\n    bgCreditBlock.classList.add('hidden');\r\n    bgCredit.textContent = \"\";\r\n  }\r\n  \r\n}\r\nchangeBackgroundImage();\r\n\r\nclass Locale {\r\n  constructor(name, folder, latin) {\r\n    this.name = name;\r\n    this.folder = folder;\r\n    this.latin = latin;\r\n  }\r\n}\r\n\r\nconst LOCALES = new Map();\r\n\r\nLOCALES.set(\"af\", new Locale(\"Afrikaans\", 1078, 0));\r\nLOCALES.set(\"sq\", new Locale(\"Albanian\", 1052, 0));\r\nLOCALES.set(\"ar\", new Locale(\"Arabic\", 14337, 0));\r\nLOCALES.set(\"ca\", new Locale(\"Catalan\", 1027, 0));\r\nLOCALES.set(\"zh_CN\", new Locale(\"Chinese Simplified\", 2052, 1));\r\nLOCALES.set(\"zh_TW\", new Locale(\"Chinese Traditional\", 1028, 1));\r\nLOCALES.set(\"cs\", new Locale(\"Czech\", 1029, 0));\r\nLOCALES.set(\"da\", new Locale(\"Danish\", 1030, 0));\r\nLOCALES.set(\"nl\", new Locale(\"Dutch\", 1043, 0));\r\nLOCALES.set(\"en\", new Locale(\"English\", 2057, 0));\r\nLOCALES.set(\"fi\", new Locale(\"Finnish\", 1035, 0));\r\nLOCALES.set(\"fr\", new Locale(\"French\", 1036, 0));\r\nLOCALES.set(\"de\", new Locale(\"German\", 1031, 0));\r\nLOCALES.set(\"el\", new Locale(\"Greek\", 1032, 0));\r\nLOCALES.set(\"he\", new Locale(\"Hebrew\", 1037, 0));\r\nLOCALES.set(\"hu\", new Locale(\"Hungarian\", 1038, 0));\r\nLOCALES.set(\"it\", new Locale(\"Italian\", 1040, 0));\r\nLOCALES.set(\"ja\", new Locale(\"Japanese\", 1041, 1));\r\nLOCALES.set(\"ko\", new Locale(\"Korean\", 1042, 1));\r\nLOCALES.set(\"no\", new Locale(\"Norwegian\", 1044, 0));\r\nLOCALES.set(\"pl\", new Locale(\"Polish\", 1045, 0));\r\nLOCALES.set(\"pt_BR\", new Locale(\"Portuguese Brazilian\", 1046, 0));\r\nLOCALES.set(\"pt_PT\", new Locale(\"Portuguese\", 2070, 0));\r\nLOCALES.set(\"ro\", new Locale(\"Romanian\", 1048, 0));\r\nLOCALES.set(\"ru\", new Locale(\"Russian\", 1049, 0));\r\nLOCALES.set(\"sr\", new Locale(\"Serbian (Cyrillic)\", 3098, 0));\r\nLOCALES.set(\"es_ES\", new Locale(\"Spanish\", 1034, 0));\r\nLOCALES.set(\"sv_SE\", new Locale(\"Swedish\", 1053, 0));\r\nLOCALES.set(\"tr\", new Locale(\"Turkish\", 1055, 0));\r\nLOCALES.set(\"uk\", new Locale(\"Ukrainian\", 1058, 0));\r\nLOCALES.set(\"vi\", new Locale(\"Vietnamese\", 1066, 0));\r\n\r\nconst TRANSLATION_FIX = {\r\n  \"base_ImageLogo0_5\": \"UI/Textures/dsp-logo-en\",\r\n  \"base_ImageLogo1_5\": \"UI/Textures/dsp-logo-flat-en\",\r\n  \"base_ImageLogo2_0\": \"UI/Textures/dsp-logo-flat-en\",\r\n  \"base_AudioResPostfix_5\": \"-en\",\r\n  \"base_ResPostfix_5\": \"-en\",\r\n  \"base_CutsceneBGM0_0\": \"Musics/df-cutscene-en\",\r\n}\r\n\r\nconst SOURCEVARIABLES = {\r\n  \"base_配送线路数量提示1_3\": \"{0} available route(s) / {1} route(s) out of range\"\r\n}\r\n\r\nlet SELECTED_LOCALE = !localStorage.dspConverterLang ? 'en' : localStorage.dspConverterLang;\r\n\r\nlet SOURCE;\r\nasync function fetchData() {\r\n  try {\r\n    const response = await fetch('./js/DysonSphereProgram_The_Dark_Fog.json');\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    SOURCE = await response.json();\r\n  } catch (error) {\r\n    console.error('There was a problem with the fetch operation:', error);\r\n  }\r\n}\r\nfetchData();\r\n\r\nlet ERRORSTRINGS = {}\r\n\r\n// populate the drop-down list\r\nfunction initLocales() {\r\n  let selectElement = document.getElementById(\"locale-selection\");\r\n  LOCALES.forEach(function (value, key) {\r\n    const optionElement = document.createElement(\"option\");\r\n    optionElement.value = key;\r\n    optionElement.textContent = value.name;\r\n    if (key == SELECTED_LOCALE) {\r\n      optionElement.selected = true;\r\n    }\r\n    selectElement.appendChild(optionElement);\r\n  });\r\n}\r\n\r\nfunction updateLocale(select) {\r\n  SELECTED_LOCALE = select.value;\r\n  localStorage.dspConverterLang = SELECTED_LOCALE;\r\n}\r\n\r\nasync function downloadTranslation() {\r\n  clearErrors();\r\n  // initialize zip\r\n  let translationZip = new JSZip();\r\n\r\n  // get json file directly from crowdin project -- NOT WORKING YET\r\n  //let crowdinZip = await downloadCrowdinZip();\r\n\r\n  // generate header.txt file and add to the zip\r\n  translationZip.file(\"Header.txt\", generateHeader());\r\n\r\n  // create language folder in zip for translation txt files\r\n  let translationsFolder = translationZip.folder(LOCALES.get(SELECTED_LOCALE).folder);\r\n  // convert json to a map containing a blob for each file\r\n  // then add each file in the language folder\r\n  const formattedLocale = SELECTED_LOCALE.replace(\"_\", \"-\");\r\n  convertTranslations()\r\n    .then(function (translationFiles) {\r\n      if(translationFiles){\r\n        translationFiles.forEach(function (value, key) {\r\n          translationsFolder.file(key.concat(\".txt\"), value);\r\n        });\r\n        // generate and download zip\r\n        translationZip\r\n          .generateAsync({ type: \"blob\" })\r\n          .then(function (content) {\r\n            saveAs(content, `dsp-translation-${formattedLocale}.zip`);\r\n          })\r\n          .catch(function (error) {\r\n            errorHandler(error);\r\n          });\r\n      }\r\n    })\r\n    .catch(function (error) {\r\n      errorHandler(error);\r\n    });;\r\n}\r\n\r\n// -- NOT WORKING YET\r\n// async function downloadCrowdinZip() {\r\n//   let translationUrl = CROWDIN_URL.concat(SELECTED_LOCALE.replace(\"_\", \"-\")).concat(\".zip\");\r\n//   try {\r\n//     const response = await fetch(translationUrl, {\r\n//       mode: \"no-cors\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/zip\"\r\n//       }\r\n//     });\r\n//     const crowdinZip = await response.blob();\r\n//     return crowdinZip;\r\n//   } catch (error) {\r\n//     console.error(`Download error: ${error.message}`);\r\n//   }\r\n// }\r\n\r\nfunction generateHeader() {\r\n  let localeProps = LOCALES.get(SELECTED_LOCALE);\r\n\r\n  let headerHeader = `[Localization Project]\r\nVersion=1.1\r\n2052,简体中文,zhCN,zh,1033,1\r\n1033,English,enUS,en,2052,0`\r\n\r\n  let headerFooter = `\r\nbase=0\r\ncombat=0\r\nprototype=-1\r\ndictionary=3\r\n[outsource]=-6\r\n[user]=-9\r\n`;\r\n\r\n  let headerLocaleElements = [localeProps.folder,\r\n  localeProps.name,\r\n  SELECTED_LOCALE.replace(/_/g, \"\"),\r\n    SELECTED_LOCALE,\r\n    \"1033\",\r\n  localeProps.latin];\r\n  let headerBody = headerLocaleElements.join(\",\");\r\n\r\n  let headerElements = [headerHeader, headerBody, headerFooter];\r\n\r\n  return headerElements.join(\"\\n\");\r\n}\r\n\r\nasync function convertTranslations() {\r\n  return new Promise((resolve, reject) => {\r\n    const input = document.getElementById(\"FileInput\");\r\n    const file = input.files[0];\r\n    const reader = new FileReader();\r\n\r\n    if (!file) {\r\n      reject(new Error(\"No file selected\"));\r\n      return;\r\n    }\r\n\r\n    if (!file.name.toLowerCase().endsWith('.json')) {\r\n      reject(new Error(\"Wrong file type (expected json)\"));\r\n      return;\r\n    }\r\n\r\n    reader.onload = function () {\r\n      const jsonString = reader.result;\r\n      let jsonData;\r\n      try {\r\n        jsonData = JSON.parse(jsonString);\r\n      } catch (error) {\r\n        reject(new Error(\"JSON parsing: \".concat(error)));\r\n        return;\r\n      }\r\n      resolve(createFilesFromJson(jsonData));\r\n    };\r\n\r\n    reader.onerror = function () {\r\n      reject(new Error(\"File reading failed\"));\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  });\r\n}\r\n\r\nfunction Copy(element){\r\n  let text_to_copy = element.value;\r\n  element.select();\r\n  if (!navigator.clipboard){\r\n    // use old commandExec() way\r\n    let $temp = $(\"<input>\");\r\n    $(\"body\").append($temp);\r\n    $temp.val($(element).text()).select();\r\n    document.execCommand(\"copy\");\r\n    $temp.remove();\r\n  } else{\r\n    navigator.clipboard.writeText(text_to_copy).then(\r\n      function(){\r\n        console.log(\"text copied!\"); // success \r\n      })\r\n    .catch(\r\n      function() {\r\n      console.log(\"error copying text\"); // error\r\n    });\r\n  }\r\n}\r\n\r\nfunction createFilesFromJson(data) {\r\n  let error = false;\r\n  let filename = null;\r\n  let fileContent = \"\";\r\n  let translationFiles = new Map();\r\n\r\n  function closeResetFile(newFilename) {\r\n    const utf16leContent = new TextEncoder(\"utf-16le\").encode(fileContent);\r\n    const blob = new Blob([utf16leContent], { type: \"text/plain;charset=utf-16le\" });\r\n    translationFiles.set(filename, blob);\r\n    filename = newFilename;\r\n    fileContent = \"\";\r\n  }\r\n\r\n  let errorStrings = document.getElementById('error-strings');\r\n  let stringsWithError = \"\";\r\n  \r\n  Object.keys(data).forEach(function (key) {\r\n    let file, original, questionMark, num;\r\n\r\n    let value = data[key].replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\");\r\n\r\n    let props = key.split(\"_\");\r\n\r\n    if (props.length === 3) {\r\n      [file, original, num] = props;\r\n      questionMark = \"\";\r\n    }\r\n    else if (props.length === 4) {\r\n      [file, original, questionMark, num] = props;\r\n    }\r\n\r\n    if (filename === null) {\r\n      filename = file;\r\n    }\r\n    else if (file !== filename) {\r\n      closeResetFile(file);\r\n    }\r\n\r\n    if(SOURCE[key]){\r\n      let sourceVariables = SOURCE[key].match(/\\{(\\d+|\\[\\d+\\])\\}/g);\r\n      if(sourceVariables){\r\n        let containsVariable = sourceVariables.every(variable => value.includes(variable));\r\n        if(!containsVariable){\r\n          error = true;\r\n          stringsWithError = `<div class=\"string-with-error\">\r\n          <div class=\"key\">\r\n            <span class=\"text\">Key:</span>\r\n            <input type=\"text\" readonly class=\"text\" onclick=\"Copy(this)\" value=${key}>\r\n          </div>\r\n          <div class=\"source\">\r\n            <span class=\"text\">Source:</span>\r\n            <span class=\"translation-text\">${SOURCE[key]}</span>\r\n          </div>\r\n          <div class=\"translation\">\r\n            <span class=\"text\">Translation:</span>\r\n            <span class=\"translation-text\">${value}</span>\r\n          </div>`;\r\n\r\n          sourceVariables.forEach((variable, index) => {\r\n            if (!value.includes(variable)) {\r\n              //missingPlaceholders.push(variable);\r\n              stringsWithError += `<div class=\"missing\">\r\n              <span class=\"text\">Missing variables:</span>\r\n              <span class=\"variable-missing\">${variable}</span>\r\n              </div>`\r\n            }\r\n          });\r\n          stringsWithError += `</div>`;\r\n          \r\n          errorStrings.innerHTML += stringsWithError;\r\n          \r\n        }\r\n      }\r\n    }\r\n\r\n    if (TRANSLATION_FIX[key]) {\r\n      fileContent += `${original}\\t${questionMark}\\t${num}\\t${TRANSLATION_FIX[key]}\\n`;\r\n    } else {\r\n      if (key === \"base_需要重启完全生效_3\") {\r\n        fileContent += `${original}\\t${questionMark}\\t${num}\\t${value} v.${VERSION}\\r`;\r\n      } else {\r\n        fileContent += `${original}\\t${questionMark}\\t${num}\\t${value}\\r`;\r\n      }\r\n    }\r\n  })\r\n\r\n  if(error){\r\n    stringsWithError = `<div class=\"translation-error\">⚠ TRANSLATION WITH ERROR, NEEDS A FIX OR IT WILL NOT WORK ⚠</div>`;\r\n    errorStrings.insertAdjacentHTML('afterbegin', stringsWithError)\r\n  }\r\n\r\n  closeResetFile(filename);\r\n  if(!error){\r\n    return translationFiles;\r\n  }\r\n  \r\n}\r\n\r\nfunction errorHandler(error) {\r\n  console.log(error);\r\n  updateErrors(error);\r\n}\r\n\r\nfunction clearErrors() {\r\n  updateErrors(\"\");\r\n}\r\n\r\nfunction updateErrors(error) {\r\n  const errorDisplay = document.getElementById(\"ErrorDisplay\");\r\n  errorDisplay.textContent = error;\r\n}\r\n\r\n\r\ndocument.querySelectorAll('.tabsnav ul li').forEach((tab, index) => {\r\n  tab.addEventListener('click', () => {\r\n    const tabsContainer = tab.closest('.tabbedContent');\r\n    const tabsNav = tabsContainer.querySelectorAll('.tabsnav ul li');\r\n    const tabsContent = tabsContainer.querySelectorAll('.tabscontent .tab');\r\n    tabsNav.forEach((navItem) => navItem.classList.remove('active'));\r\n    tab.classList.add('active');\r\n    tabsContent.forEach((contentItem) => contentItem.classList.remove('active'));\r\n    tabsContent[index].classList.add('active');\r\n  });\r\n});\r\n"
        }
    ]
}